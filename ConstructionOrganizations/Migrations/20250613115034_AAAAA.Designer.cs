// <auto-generated />
using System;
using ConstructionOrganizations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ConstructionOrganizations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250613115034_AAAAA")]
    partial class AAAAA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConstructionOrganizations.Models.Brigade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Brigades");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.BrigadeWorkAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("BrigadeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WorkScheduleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("WorkScheduleId");

                    b.ToTable("BrigadeWorkAssignment");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("ConstructionDepartments");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("ConstructionOrganizations");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Location");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ConstructionProject");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrigadeId")
                        .HasColumnType("integer")
                        .HasColumnName("BrigadeId");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("EmployeeTypeId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("LastName");

                    b.Property<int?>("PositionId")
                        .HasColumnType("integer")
                        .HasColumnName("PositionId");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("TypeName");

                    b.HasKey("Id");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentCount")
                        .HasColumnType("integer")
                        .HasColumnName("EquipmentCount");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("EquipmentName");

                    b.Property<int?>("ManagementId")
                        .HasColumnType("integer")
                        .HasColumnName("ManagementId");

                    b.HasKey("Id");

                    b.HasIndex("ManagementId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.EquipmentObjectAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ObjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ObjectId");

                    b.ToTable("EquipmentObjectAssignment");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.MaterialEstimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("MaterialCount")
                        .HasColumnType("bigint")
                        .HasColumnName("MaterialCount");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("MaterialName");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectId");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.ToTable("MaterialEstimates");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.MaterialUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("MaterialCount")
                        .HasColumnType("bigint")
                        .HasColumnName("MaterialCount");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("MaterialName");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectId");

                    b.Property<int?>("WorkScheduleId")
                        .HasColumnType("integer")
                        .HasColumnName("WorkScheduleId");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.HasIndex("WorkScheduleId");

                    b.ToTable("MaterialUsages");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Object", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConstructionProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("ConstructionProjectId");

                    b.Property<string>("Customer")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Customer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDate");

                    b.Property<int?>("ObjectType")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectType");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionProjectId");

                    b.HasIndex("ObjectType");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ObjectAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("AttributeName");

                    b.Property<long>("AttributeValue")
                        .HasColumnType("bigint")
                        .HasColumnName("AttributeValue");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectId");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.ToTable("ObjectAttributes");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ObjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TypeName");

                    b.HasKey("Id");

                    b.ToTable("ObjectTypes");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.WorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ActualEndDate");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ActualStartDate");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectId");

                    b.Property<DateTime>("PlannedEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PlannedEndDate");

                    b.Property<DateTime>("PlannedStartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("PlannedStartDate");

                    b.Property<int?>("WorkTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("WorkTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.BrigadeWorkAssignment", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Brigade", "Brigade")
                        .WithMany("BrigadeWorkAssignments")
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConstructionOrganizations.Models.WorkSchedule", "WorkSchedule")
                        .WithMany("BrigadeWorkAssignments")
                        .HasForeignKey("WorkScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigade");

                    b.Navigation("WorkSchedule");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionDepartment", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.ConstructionOrganization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionProject", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.ConstructionDepartment", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Employee", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Brigade", "Brigade")
                        .WithMany("Members")
                        .HasForeignKey("BrigadeId");

                    b.HasOne("ConstructionOrganizations.Models.EmployeeType", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("ConstructionOrganizations.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId");

                    b.HasOne("ConstructionOrganizations.Models.ConstructionProject", "ConstructionProject")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Brigade");

                    b.Navigation("ConstructionProject");

                    b.Navigation("EmployeeType");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Equipment", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.ConstructionDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("ManagementId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.EquipmentObjectAssignment", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Equipment", "Equipment")
                        .WithMany("EquipmentObjectAssignments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConstructionOrganizations.Models.Object", "Object")
                        .WithMany("EquipmentObjectAssignments")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.MaterialEstimate", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Object", "Object")
                        .WithMany("MaterialEstimates")
                        .HasForeignKey("ObjectId");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.MaterialUsage", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Object", "Object")
                        .WithMany("MaterialUsages")
                        .HasForeignKey("ObjectId");

                    b.HasOne("ConstructionOrganizations.Models.WorkSchedule", "WorkSchedule")
                        .WithMany("MaterialUsages")
                        .HasForeignKey("WorkScheduleId");

                    b.Navigation("Object");

                    b.Navigation("WorkSchedule");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Object", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.ConstructionProject", "Project")
                        .WithMany()
                        .HasForeignKey("ConstructionProjectId");

                    b.HasOne("ConstructionOrganizations.Models.ObjectType", "ObjectTypeNavigation")
                        .WithMany()
                        .HasForeignKey("ObjectType");

                    b.Navigation("ObjectTypeNavigation");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ObjectAttribute", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Object", "Object")
                        .WithMany("Attributes")
                        .HasForeignKey("ObjectId");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.WorkSchedule", b =>
                {
                    b.HasOne("ConstructionOrganizations.Models.Object", "Object")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("ObjectId");

                    b.HasOne("ConstructionOrganizations.Models.WorkType", "WorkType")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("WorkTypeId");

                    b.Navigation("Object");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Brigade", b =>
                {
                    b.Navigation("BrigadeWorkAssignments");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionDepartment", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionOrganization", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.ConstructionProject", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.EmployeeType", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Equipment", b =>
                {
                    b.Navigation("EquipmentObjectAssignments");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Object", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("EquipmentObjectAssignments");

                    b.Navigation("MaterialEstimates");

                    b.Navigation("MaterialUsages");

                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.WorkSchedule", b =>
                {
                    b.Navigation("BrigadeWorkAssignments");

                    b.Navigation("MaterialUsages");
                });

            modelBuilder.Entity("ConstructionOrganizations.Models.WorkType", b =>
                {
                    b.Navigation("WorkSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
